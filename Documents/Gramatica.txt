S -> {VARIAVEL|CONSTANTE} COMANDO

VARIAVEL -> (int|char) id[ "["const"]" | ATRIBUICAO ] { ,id[ "["const"]" ] [ATRIBUICAO] };
ATRIBUICAO -> <- const
CONSTANTE -> final id = [+|-] const;

COMANDO -> {
           for id <- EXP to EXP [step const] do BLOCO |
           if EXP then BLOCO [else BLOCO] |
           readln "(" id[ "[" EXP "]" ] ")"; |
           write "(" EXP {,EXP} ")"; |
           writeln "(" EXP{ ,EXP} ")"; |
           id <- EXP; |
           ;
           }

BLOCO -> begin COMANDO end; | COMANDO;

EXP  -> EXPS[ (<|>|<=|>=|=|<>)EXPS ]
EXPS -> [+|-] T{ (+|-|or)T }
T    -> F{ (*|/|%|and)F }
F    -> "("EXP")" | not F | const | id[ "["EXP"]" ]

first:

S -> lambda | int | char | final | for | if | readln | write | writeln | id | ;
VARIAVEL -> int | char
ATRIBUICAO -> <-
CONSTANTE -> final
COMANDO -> for | if | readln | write | writeln | id | ;
BLOCO -> begin | for | if | readln | write | writeln | id | ;

EXP   -> + | - | ( | not | const | id
EXPS  -> + | - | ( | not | const | id
T     -> ( | not | const | id
F     -> ( | not | const | id